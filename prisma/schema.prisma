// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @unique @default(autoincrement())
  firstName String
  lastName  String
  password  String
  email     String     @unique
  partnerId Int?       @unique
  partner   User?      @relation("PartnerRelation", fields: [partnerId], references: [id])
  partners  User[]     @relation("PartnerRelation")
  children  UserBaby[]
}

model Baby {
  id          Int        @id @default(autoincrement())
  name        String
  dateOfBirth DateTime
  gender      String
  nutrition   String?
  parents     UserBaby[]
  Diaper      Diaper[]
  Food        Food[]
  Med         Med[]
  Sleep       Sleep[]
}

model Diaper {
  id     Int      @id @default(autoincrement())
  babyId Int
  type   String
  time   DateTime @default(now())

  baby Baby @relation(fields: [babyId], references: [id], onDelete: Cascade)
}

model Food {
  id       Int      @id @unique @default(autoincrement())
  babyId   Int
  foodName String
  quantity String?
  time     DateTime @default(now())

  baby Baby @relation(fields: [babyId], references: [id], onDelete: Cascade)
}

model Med {
  id       Int      @id @default(autoincrement())
  babyId   Int
  medicine String
  dosage   String?
  time     DateTime @default(now())

  baby Baby @relation(fields: [babyId], references: [id], onDelete: Cascade)
}

model Sleep {
  id        Int       @id @default(autoincrement())
  babyId    Int
  startTime DateTime
  endTime   DateTime?

  baby Baby @relation(fields: [babyId], references: [id], onDelete: Cascade)
}

model UserBaby {
  id     Int @id @default(autoincrement())
  userId Int
  babyId Int

  user User @relation(fields: [userId], references: [id])
  baby Baby @relation(fields: [babyId], references: [id], onDelete: Cascade)

  @@unique([userId, babyId])
}